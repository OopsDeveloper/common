<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
       ">
    <!--빈(Bean) 설정-->
    <bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

    <security:http>
        <!-- 로그인 url -->
        <security:form-login login-page="/common/login.html" />
        <!-- 로그아웃 url -->
        <security:logout logout-url="/common/logout.html" invalidate-session="true" />

        <security:intercept-url pattern="/main.html" access="hasRole('ROLE_MEMBER')" />

        <!-- 접근 권한 없는 경우(아이디/비밀번호가 존재하나 권한이 없음) 이동 페이지 -->
        <security:access-denied-handler error-page="/common/accessError.html" />

    </security:http>

    <security:authentication-manager>
        <security:authentication-provider>
            <!-- 기존 테이블에서 회원정보 가져오기 -->
            <security:jdbc-user-service data-source-ref="dataSource"
               authorities-by-username-query="select userid as username, userpw as password, enabled from tbl_member where userid = ?"
               group-authorities-by-username-query="select userid, auth from tbl_member_auth where userid = ? " />
            <!-- 인코딩 커스텀 -->
            <security:password-encoder ref="bcryptPasswordEncoder" />

        </security:authentication-provider>


    </security:authentication-manager>
</beans>